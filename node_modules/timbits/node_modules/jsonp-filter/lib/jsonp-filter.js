(function() {
  var out, url;
  url = require('url');
  out = (require('styout')).instance('jsonp-filter');
  out.verbosity = out.WARN_VERBOSITY;
  exports.setupJSONP = function() {
    var handleJSONP;
    return handleJSONP = function(req, res, next) {
      var checkJSON, end, isJSON, write, writeHead;
      checkJSON = function() {
        var re, uri;
        uri = url.parse(req.url);
        re = /json=true/i;
        return re.test(uri.query != null ? uri.query : '');
      };
      isJSON = checkJSON();
      exports.json = '';
      writeHead = res.writeHead;
      res.writeHead = function(statusCode, reasonPhrase, headers) {
        res.writeHead = writeHead;
        out.debug('res.writeHead');
        if (!isJSON) {
          return res.writeHead(statusCode, reasonPhrase, headers);
        }
      };
      write = res.write;
      res.write = function(chunk, encoding) {
        res.write = write;
        if (isJSON) {
          out.debug('res.write json');
          return exports.json += chunk.toString();
        } else {
          out.debug('res.write normal');
          return res.write(chunk, encoding);
        }
      };
      end = res.end;
      res.end = function(data, encoding) {
        res.end = end;
        if (isJSON) {
          out.debug('res.end json');
          return res.json(exports.json);
        } else if (data != null) {
          out.debug('res.end data');
          return res.end(data, encoding);
        } else {
          out.debug('res.end nodata');
          return res.end();
        }
      };
      return next();
    };
  };
}).call(this);
